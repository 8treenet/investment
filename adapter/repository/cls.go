// Package repository generated by 'freedom new-project investment'
package repository

import (
	"investment/domain/po/custom"

	"github.com/8treenet/freedom"
	"gorm.io/gorm"
)

func init() {
	freedom.Prepare(func(initiator freedom.Initiator) {
		initiator.BindRepository(func() *CLSRepository {
			return &CLSRepository{}
		})
	})
}

// CLSRepository 财联社数据库 .
type CLSRepository struct {
	freedom.Repository
}

// CLSRepository
func (repo *CLSRepository) SaveArticle(article *custom.ClsDepthArticle) (e error) {
	e = repo.db().Create(article).Error
	return
}

// GetArticle
func (repo *CLSRepository) GetArticle(articleId int) (result *custom.ClsDepthArticle, e error) {
	result = &custom.ClsDepthArticle{ArticleID: articleId}
	e = repo.db().Find(result).Error
	return
}

// db .
func (repo *CLSRepository) db() *gorm.DB {
	var db *gorm.DB
	if err := repo.FetchDB(&db); err != nil {
		panic(err)
	}
	return db
}
